
import java.sql.ResultSet;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Andrea
 */
public class menorTiempo extends javax.swing.JFrame {

    /**
     * Creates new form menorTiempo
     */
    public menorTiempo() {
        initComponents();
        
        tiempolbl.setText(bienvenido.tiempo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tiempolbl = new javax.swing.JLabel();
        restaurantelbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 102, 102));
        label1.setText("Usted debe ir a:");

        jButton1.setText("Atras");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ver restaurante ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tiempolbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tiempolbl.setForeground(new java.awt.Color(255, 153, 153));

        restaurantelbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        restaurantelbl.setForeground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 153));
        jLabel1.setText("Porque el tiempo de espera es de:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(230, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tiempolbl, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(restaurantelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel1)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restaurantelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tiempolbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(81, 81, 81)
                .addComponent(jButton1)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Inicio nuevo = new Inicio();
        nuevo.setVisible(true); 
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try {
            conexion db = new conexion();
            String restaurant;
           
            int contadorSnack = 0;
            int contadorGitane=0;
            int contadorBagel = 0;
            int contadorGolden = 0;
            int contadorRed=0;
            int contadorGreen = 0;
            int contadorMonchiz= 0;
            int contadorYogurt = 0;
            
            double resultadoSnack = 0.0;
            double resultadoGitane =0.0;
            double resultadoBagel = 0.0;
            double resultadoGolden= 0.0;
            double resultadoRed =0.0;
            double resultadoGreen =0.0;
            double resultadoMonchiz = 0.0;
            double resultadoYogurt = 0.0;
            
            ArrayList<String> arreglo = new ArrayList<String>();
           //DefaultTableModel modelo = new DefaultTableModel(); 
           ResultSet rs = db.searchQuery("select tiempo,restaurante from reporte" );
           //modelo.setColumnIdentifiers(new Object[]{"Tiempo","Restaurante"});
           try{
                
           
               while(rs.next()){
                   if(rs.getString("Restaurante").equals("Snackers")){
                      resultadoSnack = resultadoSnack + Double.parseDouble(rs.getString("Tiempo"));
                      contadorSnack = contadorSnack + 1;
                      
                   }
                    if(rs.getString("Restaurante").equals("Gitane")){
                      resultadoGitane = resultadoGitane + Double.parseDouble(rs.getString("Tiempo"));
                      contadorGitane = contadorGitane + 1;
                      
                   }
                     if(rs.getString("Restaurante").equals("RED")){
                      resultadoRed = resultadoRed + Double.parseDouble(rs.getString("Tiempo"));
                      contadorRed = contadorRed + 1;
                      
                   }
                    if(rs.getString("Restaurante").equals("Bagel Bros")){
                      resultadoBagel = resultadoBagel + Double.parseDouble(rs.getString("Tiempo"));
                      contadorBagel = contadorBagel + 1;
                      
                   }
                    if(rs.getString("Restaurante").equals("Golden  Harvest")){
                      resultadoGolden = resultadoGolden + Double.parseDouble(rs.getString("Tiempo"));
                      contadorGolden = contadorGolden + 1;
                      
                   }
                    if(rs.getString("Restaurante").equals("Go Green")){
                      resultadoGreen = resultadoGreen + Double.parseDouble(rs.getString("Tiempo"));
                      contadorGreen = contadorGreen + 1;
                      
                   }
                    if(rs.getString("Restaurante").equals("Monchiz")){
                      resultadoMonchiz = resultadoMonchiz + Double.parseDouble(rs.getString("Tiempo"));
                      contadorMonchiz = contadorMonchiz + 1;
                      
                   }
                    if(rs.getString("Restaurante").equals("My Yogurt")){
                      resultadoYogurt = resultadoYogurt + Double.parseDouble(rs.getString("Tiempo"));
                      contadorYogurt = contadorYogurt + 1;
                      
                   }
               }
               if (contadorSnack == 0){
                   resultadoSnack = 0.0;
                  String totalSnack = (String.format("%.2f",resultadoSnack));
                  arreglo.add(totalSnack);
               }else{
                   resultadoSnack = resultadoSnack/contadorSnack;
               String totalSnack = (String.format("%.2f", resultadoSnack));
                  arreglo.add(totalSnack);
               }
               if (contadorGitane == 0){
                   resultadoGitane = 0.0;
                  String totalGitane = (String.format("%.2f",resultadoGitane));
                 arreglo.add(totalGitane);
               }else{
                   resultadoGitane = resultadoGitane/contadorGitane;
               String totalGitane = (String.format("%.2f", resultadoGitane));
                  arreglo.add(totalGitane);
               }
               if (contadorRed == 0){
                   resultadoRed = 0.0;
                  String totalRed = (String.format("%.2f",resultadoRed));
                 arreglo.add(totalRed);
               }else{
                   resultadoRed = resultadoRed/contadorRed;
               String totalRed = (String.format("%.2f", resultadoRed));
                 arreglo.add(totalRed);
               }
               if (contadorBagel == 0){
                   resultadoBagel = 0.0;
                  String totalBagel = (String.format("%.2f",resultadoBagel));
                  arreglo.add(totalBagel);
               }else{
                   resultadoBagel = resultadoBagel/contadorBagel;
               String totalBagel = (String.format("%.2f", resultadoBagel));
                 arreglo.add(totalBagel);
               }
               if (contadorGolden == 0){
                   resultadoGolden = 0.0;
                  String totalGolden = (String.format("%.2f",resultadoGolden));
                 arreglo.add(totalGolden);
               }else{
                   resultadoGolden = resultadoGolden/contadorGolden;
               String totalGolden = (String.format("%.2f", resultadoGolden));
                arreglo.add(totalGolden);
               }
               if (contadorGreen == 0){
                   resultadoGreen = 0.0;
                  String totalGreen = (String.format("%.2f",resultadoGreen));
                 arreglo.add(totalGreen);
               }else{
                   resultadoGreen = resultadoGreen/contadorGreen;
               String totalGreen = (String.format("%.2f", resultadoGreen));
                arreglo.add(totalGreen);
               }
               if (contadorMonchiz == 0){
                   resultadoMonchiz = 0.0;
                  String totalMonchiz = (String.format("%.2f",resultadoMonchiz));
                  arreglo.add(totalMonchiz);
               }else{
                   resultadoMonchiz = resultadoMonchiz/contadorMonchiz;
               String totalMonchiz = (String.format("%.2f", resultadoMonchiz));
                 arreglo.add(totalMonchiz);
               }
               if (contadorYogurt == 0){
                   resultadoYogurt = 0.0;
                  String totalYogurt = (String.format("%.2f",resultadoYogurt));
                  arreglo.add(totalYogurt);
               }else{
                   resultadoYogurt = resultadoYogurt/contadorYogurt;
               String totalYogurt = (String.format("%.2f", resultadoYogurt));
                  arreglo.add(totalYogurt);
               }
               
           }catch(Exception e){
               System.out.println(e);
           }
           double max =0;
           for(int i =0; i<arreglo.size();i++){
               double mayor = Double.parseDouble(arreglo.get(i));
               if(mayor>max){
                   max = mayor;
               }
           }
           double min = max;
           for(int i =0; i<arreglo.size();i++){
               double menor = Double.parseDouble(arreglo.get(i));
               if(menor < min){
                   min = menor;
               }
           }
           String menorcito = (String.format("%.2f",min));
           int posicion = arreglo.indexOf(menorcito);
           if(posicion == 0){
               bienvenido.texto = "Snackers";
               bienvenido.tiempo = arreglo.get(0);
               System.out.println(bienvenido.tiempo);
           }
           if(posicion == 1){
               bienvenido.texto = "Gitane";
               bienvenido.tiempo = arreglo.get(1);
           }
           if(posicion == 2){
               bienvenido.texto = "RED";
               bienvenido.tiempo = arreglo.get(2);
           }
           if(posicion == 3){
               bienvenido.texto = "Bagel";
               bienvenido.tiempo = arreglo.get(3);
           }
           if(posicion == 4){
               bienvenido.texto = "Golden Harvest";
               bienvenido.tiempo = arreglo.get(4);
           }
           if(posicion == 5){
               bienvenido.texto = "Go Green";
               bienvenido.tiempo = arreglo.get(5);
           }
           if(posicion == 6){
               bienvenido.texto = "Monchiz";
               bienvenido.tiempo = arreglo.get(6);
           }
           if(posicion == 7){
               bienvenido.texto = "My Yogurt";
               bienvenido.tiempo = arreglo.get(7);
           }
           
           tiempolbl.setText(bienvenido.tiempo+" minutos");
           restaurantelbl.setText(bienvenido.texto);
           
           
         
         }
        catch(Exception ex){
           System.out.println("Error"+ex.getMessage());
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menorTiempo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menorTiempo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menorTiempo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menorTiempo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menorTiempo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private java.awt.Label label1;
    private javax.swing.JLabel restaurantelbl;
    private javax.swing.JLabel tiempolbl;
    // End of variables declaration//GEN-END:variables
}
